params {

    // Process resource specification as parameters so 
    // that resources can be set from the command-line

    resources {
        ivar {
            cpus = 1
        }
        mash {
            cpus = 8
        }
        fastp {
            cpus = 4
        }
        nanoq {
            cpus = 1
        }
        spades {
            cpus = 8
        }
        cerebro {
            cpus = 1
        }
        rasusa {
            cpus = 2
        }
        kraken2 {
            cpus = 4
        }
        minimap2 {
            cpus = 8
        }
        blast_nt {
            cpus = 8
            memory = "64 GB"
        }
        diamond_nr {
            cpus = 8
            memory = "64 GB"
        }
        meta_spades {
            cpus = 8
            memory = "64 GB"
        }
        kraken2uniq {
            cpus = 8
            memory = "64 GB"
        }
        kraken2bracken {
            cpus = 8
        }
        umi_align {
            cpus = 8
        }
        umi_tools {
            cpus = 1
        }
        umi_calib {
            cpus = 1
        }
        umi_cerebro {
            cpus = 2
        }
        minimap2_realign {
            cpus = 8
        }
        minimap2_aneuploidy {
            cpus = 16
        }
        cnvkit_aneuploidy {
            cpus = 2
        }
        scrubby_reads {
            cpus = 4
        }
        scrubby_single {
            cpus = 8
        }
    }
}

process {

    // Process resource labels with parameter specification
    // for provisioning of process resources from command-line

    withLabel: ivar { cpus = params.resources.ivar.cpus }
    withLabel: mash { cpus = params.resources.mash.cpus } 
    withLabel: fastp { cpus = params.resources.fastp.cpus }
    withLabel: nanoq { cpus = params.resources.nanoq.cpus }
    withLabel: spades { cpus = params.resources.spades.cpus }
    withLabel: kraken2 { cpus = params.resources.kraken2.cpus }
    withLabel: cerebro { cpus = params.resources.cerebro.cpus }
    withLabel: rasusa { cpus = params.resources.rasusa.cpus }
    withLabel: minimap2 { cpus = params.resources.minimap2.cpus }
    withLabel: umi_align { cpus = params.resources.umi_align.cpus }
    withLabel: umi_tools { cpus = params.resources.umi_tools.cpus }
    withLabel: umi_calib { cpus = params.resources.umi_calib.cpus }
    withLabel: umi_cerebro { cpus = params.resources.umi_cerebro.cpus }
    withLabel: scrubby_reads { cpus = params.resources.scrubby_reads.cpus }
    withLabel: scrubby_single{ cpus = params.resources.scrubby_single.cpus }
    withLabel: minimap2_realign { cpus = params.resources.minimap2_realign.cpus }
    withLabel: cnvkit_aneuploidy { cpus = params.resources.cnvkit_aneuploidy.cpus }
    withLabel: minimap2_aneuploidy { cpus = params.resources.minimap2_aneuploidy.cpus }
    withLabel: blast_nt { cpus = params.resources.blast_nt.cpus; memory = params.resources.blast_nt.memory }
    withLabel: diamond_nr { cpus = params.resources.diamond_nr.cpus; memory = params.resources.diamond_nr.memory }
    withLabel: kraken2uniq { cpus = params.resources.kraken2uniq.cpus; memory = params.resources.kraken2uniq.memory }
    withLabel: meta_spades { cpus = params.resources.meta_spades.cpus; memory = params.resources.meta_spades.memory }

}