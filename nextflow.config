params {

  fastqPaired                         = null  // glob string
  fastqSingle                         = null  // glob string

  sampleSheet                         = null  // cerebro production sample sheet

  databaseDirectory                   = "db"  // db base directory
  executionDirectory                  = "."   // cerebro-tower execution directory 

  outputDirectory                     = "$params.executionDirectory/output"  // output cerebro-tower
  stageDirectory                      = "$params.executionDirectory/stage"   // json staged sample cerebro-tower

  cerebroProduction {
    
    team                              = "CNS"
    
  }

  panviralEnrichment {            

    hostDepletion                     = true
    hostAligner                       = "bowtie2"
    hostIndex                         = "$params.databaseDirectory/chm13v2"

    virusAligner                      = "minimap2"
    virusIndex                        = "$params.databaseDirectory/virus.fasta"
    virusReference                    = "$params.databaseDirectory/virus.fasta"

    internalControls                  = true
    controlAligner                    = "minimap2"
    controlIndex                      = "$params.databaseDirectory/controls.fasta"
    controlReference                  = "$params.databaseDirectory/controls.fasta"

    adapterForward                    = null
    adapterReverse                    = null

    remapThreads                      = 2
    remapParallel                     = 4

  }

  pathogenDetection {

    cipherDatabase                    = true
    taxonomy                          = "$params.databaseDirectory"  // ncbi nodes format
    
    qualityControl {    
      
      readQuality                     = true
      readQualityMethod               = "fastp"  // fastp nanoq
      
      readDeduplication               = true
      readDeduplicationHead           = 75
      readDeduplicationDeterministic  = false
    
      adapterForward                  = null
      adapterReverse                  = null
    
      syntheticControls               = true
      syntheticControlsAligner        = "minimap2" // bowtie2 minimap2 minigraph strobealign
      syntheticControlsIndex          = "$params.databaseDirectory/ercc.fasta"
      syntheticControlsReference      = "$params.databaseDirectory/ercc.fasta"
    
      hostDepletion                   = true
      hostDepletionAligner            = "bowtie2"
      hostDepletionIndex              = "$params.databaseDirectory/chm13v2"
    
      internalControls                = true
      internalControlsAligner         = "minimap2"
      internalControlsIndex           = "$params.databaseDirectory/controls.fasta"
      internalControlsReference       = "$params.databaseDirectory/controls.fasta"
      
      backgroundDepletion             = false
      backgroundDepletionAligner      = "minimap2"
      backgroundDepletionIndex        = "$params.databaseDirectory/background.fasta"
      backgroundDepletionReference    = "$params.databaseDirectory/background.fasta"
      
    }

    taxonomicProfile {

      reference                       = "$params.databaseDirectory/cipher.fasta.xz"

      aligner                         = "bowtie2"
      alignmentIndex                  = "$params.databaseDirectory/cipher.fasta"
      alignmentReference              = "$params.pathogenDetection.taxonomicProfile.reference"

      classifier                      = "kraken2 metabuli kmcp"

      classifierAbundanceCorrection   = true
      classifierGenomeLengths         = "$params.databaseDirectory/genome_lengths.tsv.xz"
      classifierBrackenProfile        = true
      classifierCoverageRemap         = true

      metabuliIndex                   = "$params.databaseDirectory/cipher.mb"
      metabuliReference               = "$params.pathogenDetection.taxonomicProfile.reference"
      krakenIndex                     = "$params.databaseDirectory/cipher.k2"
      krakenReference                 = "$params.pathogenDetection.taxonomicProfile.reference"
      kmcpIndex                       = "$params.databaseDirectory/cipher.km"
      kmcpReference                   = "$params.pathogenDetection.taxonomicProfile.reference"

      remapThreads                    = 2
      remapParallel                   = 4

    }

    metagenomeAssembly {              // low abundance configuration for meta-gp cns

      assembler                       = "metaspades megahit" // metaspades megahit
      binner                          = "concoct"  
      
      remapCoverage                   = true
      remapCoverageAligner            = "minimap2"
      remapCoveragePolisher           = "cobra"

      ncbiDatabase                    = true
      ncbiDatabaseIndex               = "$params.databaseDirectory/nt_nr"
      ncbiDatabaseMethod              = "blastn diamond"
      ncbiDatabaseSpeciesLca          = true

      virusDetection                  = true
      viralDetectionMethod            = "genomad"
      viralDetectionIndex             = "$params.databaseDirectory/genomad_db"

      virusAligner                    = "minimap2"
      virusIndex                      = "$params.databaseDirectory/img_vr.fasta"
      virusReference                  = "$params.databaseDirectory/img_vr.fasta"

      rdrpDetection                   = true
      rdrpDetectionMethod             = "rdrp-scan"
      rdrpLibraryTag                  = "RNA"
      rdrpDetectionIndex              = "$params.databaseDirectory/rdrp_db"

      remapThreads                    = 2
      remapParallel                   = 4

    }

    hostGenome {

      aneuploidyDetection            = true
      aneuploidyReferenceMethod      = "cnvkit"
      aneuploidyLibraryTag           = "DNA HOST"

      aneuploidyAligner              = "minimap2"
      aneuploidyIndex                = "$params.databaseDirectory/chm13v2.mmi"
      aneuploidyReferenceAlignment   = "$params.databaseDirectory/aneuploidy.bam"

      signatureBacterialViral        = true
      signatureLibraryTag            = "RNA HOST"
      signatureReferences            = "two_gene_signature.fasta"
      
    }

  }
  
  threads {
    fastp                 = 8
    scrubby               = 8
    vircov                = 8
    cerebro               = 1
  }



}

profiles {

  cns_assay {

    params.pathogenDetection.qualityControl.readDeduplication   = true  
    params.pathogenDetection.qualityControl.adapterForward      = "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"
    params.pathogenDetection.qualityControl.adapterReverse      = "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"

  }

    micro {
        executor.$local.cpus = 8
        executor.$local.memory = '42 GB'
    }
    tiny {
        executor.$local.cpus = 16
        executor.$local.memory = '64 GB'
    }
    mini {
        executor.$local.cpus = 32
        executor.$local.memory = '128 GB'
    }
    small {
        executor.$local.cpus = 64
        executor.$local.memory = '512 GB'
    }
    medium {
        executor.$local.cpus = 128
        executor.$local.memory = '512 GB'
    }
    large {
        executor.$local.cpus = 256
        executor.$local.memory = '1960 GB'
    }

}

process {

    withLabel: cerebro { cpus = params.threads.cerebro }

    withLabel: panviralVirusRecovery { cpus = params.threads.vircov }
    withLabel: panviralInternalControls { cpus = params.threads.vircov }
    withLabel: panviralHostDepletion { cpus = params.threads.scrubby } 
    withLabel: panviralReadQuality { cpus = params.threads.fastp }

    withLabel: pathogenReadScan { cpus = 2 }
    withLabel: pathogenDeduplication { cpus = 2 }
    withLabel: pathogenReadQuality { cpus = params.threads.fastp }
    withLabel: pathogenHostDepletion { cpus = params.threads.scrubby }
    withLabel: pathogenInternalControls { cpus = params.threads.vircov }
    withLabel: pathogenSyntheticControls { cpus = params.threads.vircov }
    withLabel: pathogenBackgroundDepletion { cpus = params.threads.vircov }

}