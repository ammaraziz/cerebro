###############################################################################
#                                   BUILDER                                   #
###############################################################################
FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu20.04 AS builder

ARG APP_USER=appuser
ARG APP_UID=1000
ARG APP_GID=1000

# create non-root user
RUN groupadd -g $APP_GID $APP_USER \
 && useradd --uid $APP_UID --gid $APP_GID \
            --shell /usr/sbin/nologin \
            --create-home \
            $APP_USER

ENV CUDA_COMPUTE_CAP=${CUDA_COMPUTE_CAP:-80}
ENV DEBIAN_FRONTEND=noninteractive

# install build deps
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
      build-essential \
      curl \
      ca-certificates \
      git \
      pkg-config \
      libfontconfig1-dev \
      cmake \
 && rm -rf /var/lib/apt/lists/*

USER $APP_USER
WORKDIR /home/$APP_USER/app

# install Rust
ENV RUSTUP_HOME=/home/$APP_USER/rustup 
ENV CARGO_HOME=/home/$APP_USER/cargo
ENV PATH=/home/$APP_USER/cargo/bin:$PATH

RUN curl https://sh.rustup.rs -sSf \
    | sh -s -- -y --default-toolchain stable \
 && rustup default stable \
 && rustup component add rustfmt clippy

# fetch and build
COPY --chown=$APP_USER:$APP_USER Cargo.toml ./
COPY --chown=$APP_USER:$APP_USER cerebro/ ./cerebro/

RUN cargo fetch
RUN cargo build \
    --release \
    --manifest-path cerebro/stack/gp/Cargo.toml \
    --features local

###############################################################################
#                                  RUNTIME                                    #
###############################################################################
FROM nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu20.04

# runtime deps
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
      ca-certificates \
      libfontconfig1 \
 && rm -rf /var/lib/apt/lists/*

ARG APP_USER=appuser
ARG APP_UID=1000
ARG APP_GID=1000

# recreate unprivileged user
RUN groupadd -g $APP_GID $APP_USER \
 && useradd --uid $APP_UID --gid $APP_GID \
            --shell /usr/sbin/nologin \
            --create-home \
            $APP_USER
            
# create mount-point for host files
RUN mkdir -p /mnt/host \
 && chown $APP_USER:$APP_USER /mnt/host

# copy in the meta-gp binary into PATH
COPY --from=builder /home/$APP_USER/app/target/release/meta-gp /usr/local/bin/meta-gp

# switch to non-root
USER $APP_USER
WORKDIR /home/$APP_USER

# run meta-gp by default
ENTRYPOINT ["meta-gp"]
CMD ["--help"]
